{"ast":null,"code":"import { __assign, __spreadArrays } from \"tslib\";\nimport { useState, useMemo, useCallback } from 'react';\n\nvar useSet = function useSet(initialSet) {\n  if (initialSet === void 0) {\n    initialSet = new Set();\n  }\n\n  var _a = useState(initialSet),\n      set = _a[0],\n      setSet = _a[1];\n\n  var stableActions = useMemo(function () {\n    return {\n      add: function add(item) {\n        return setSet(function (prevSet) {\n          return new Set(__spreadArrays(Array.from(prevSet), [item]));\n        });\n      },\n      remove: function remove(item) {\n        return setSet(function (prevSet) {\n          return new Set(Array.from(prevSet).filter(function (i) {\n            return i !== item;\n          }));\n        });\n      },\n      reset: function reset() {\n        return setSet(initialSet);\n      }\n    };\n  }, [setSet]);\n\n  var utils = __assign({\n    has: useCallback(function (item) {\n      return set.has(item);\n    }, [set])\n  }, stableActions);\n\n  return [set, utils];\n};\n\nexport default useSet;","map":{"version":3,"sources":["/Users/sate/staketechnologies/plasmnet.io/plasmnet/node_modules/react-use/esm/useSet.js"],"names":["__assign","__spreadArrays","useState","useMemo","useCallback","useSet","initialSet","Set","_a","set","setSet","stableActions","add","item","prevSet","Array","from","remove","filter","i","reset","utils","has"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,cAAnB,QAAyC,OAAzC;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,WAA5B,QAA+C,OAA/C;;AACA,IAAIC,MAAM,GAAG,SAATA,MAAS,CAAUC,UAAV,EAAsB;AAC/B,MAAIA,UAAU,KAAK,KAAK,CAAxB,EAA2B;AAAEA,IAAAA,UAAU,GAAG,IAAIC,GAAJ,EAAb;AAAyB;;AACtD,MAAIC,EAAE,GAAGN,QAAQ,CAACI,UAAD,CAAjB;AAAA,MAA+BG,GAAG,GAAGD,EAAE,CAAC,CAAD,CAAvC;AAAA,MAA4CE,MAAM,GAAGF,EAAE,CAAC,CAAD,CAAvD;;AACA,MAAIG,aAAa,GAAGR,OAAO,CAAC,YAAY;AAAE,WAAQ;AAC9CS,MAAAA,GAAG,EAAE,aAAUC,IAAV,EAAgB;AAAE,eAAOH,MAAM,CAAC,UAAUI,OAAV,EAAmB;AAAE,iBAAO,IAAIP,GAAJ,CAAQN,cAAc,CAACc,KAAK,CAACC,IAAN,CAAWF,OAAX,CAAD,EAAsB,CAACD,IAAD,CAAtB,CAAtB,CAAP;AAA8D,SAApF,CAAb;AAAqG,OAD9E;AAE9CI,MAAAA,MAAM,EAAE,gBAAUJ,IAAV,EAAgB;AAAE,eAAOH,MAAM,CAAC,UAAUI,OAAV,EAAmB;AAAE,iBAAO,IAAIP,GAAJ,CAAQQ,KAAK,CAACC,IAAN,CAAWF,OAAX,EAAoBI,MAApB,CAA2B,UAAUC,CAAV,EAAa;AAAE,mBAAOA,CAAC,KAAKN,IAAb;AAAoB,WAA9D,CAAR,CAAP;AAAkF,SAAxG,CAAb;AAAyH,OAFrG;AAG9CO,MAAAA,KAAK,EAAE,iBAAY;AAAE,eAAOV,MAAM,CAACJ,UAAD,CAAb;AAA4B;AAHH,KAAR;AAIrC,GAJsB,EAIpB,CAACI,MAAD,CAJoB,CAA3B;;AAKA,MAAIW,KAAK,GAAGrB,QAAQ,CAAC;AAAEsB,IAAAA,GAAG,EAAElB,WAAW,CAAC,UAAUS,IAAV,EAAgB;AAAE,aAAOJ,GAAG,CAACa,GAAJ,CAAQT,IAAR,CAAP;AAAuB,KAA1C,EAA4C,CAACJ,GAAD,CAA5C;AAAlB,GAAD,EAAyEE,aAAzE,CAApB;;AACA,SAAO,CAACF,GAAD,EAAMY,KAAN,CAAP;AACH,CAVD;;AAWA,eAAehB,MAAf","sourcesContent":["import { __assign, __spreadArrays } from \"tslib\";\nimport { useState, useMemo, useCallback } from 'react';\nvar useSet = function (initialSet) {\n    if (initialSet === void 0) { initialSet = new Set(); }\n    var _a = useState(initialSet), set = _a[0], setSet = _a[1];\n    var stableActions = useMemo(function () { return ({\n        add: function (item) { return setSet(function (prevSet) { return new Set(__spreadArrays(Array.from(prevSet), [item])); }); },\n        remove: function (item) { return setSet(function (prevSet) { return new Set(Array.from(prevSet).filter(function (i) { return i !== item; })); }); },\n        reset: function () { return setSet(initialSet); },\n    }); }, [setSet]);\n    var utils = __assign({ has: useCallback(function (item) { return set.has(item); }, [set]) }, stableActions);\n    return [set, utils];\n};\nexport default useSet;\n"]},"metadata":{},"sourceType":"module"}