{"ast":null,"code":"import { __read } from \"tslib\";\nimport { BehaviorSubject } from 'rxjs';\nimport { useState, useEffect } from 'react';\nimport useConstant from 'use-constant';\nexport function useObservable(inputFactory, initialState, inputs) {\n  var _a = __read(useState(typeof initialState !== 'undefined' ? initialState : null), 2),\n      state = _a[0],\n      setState = _a[1];\n\n  var state$ = useConstant(function () {\n    return new BehaviorSubject(initialState);\n  });\n  var inputs$ = useConstant(function () {\n    return new BehaviorSubject(inputs);\n  });\n  useEffect(function () {\n    inputs$.next(inputs);\n  }, inputs || []);\n  useEffect(function () {\n    var output$;\n\n    if (inputs) {\n      output$ = inputFactory(inputs$, state$);\n    } else {\n      output$ = inputFactory(state$);\n    }\n\n    var subscription = output$.subscribe(function (value) {\n      state$.next(value);\n      setState(value);\n    });\n    return function () {\n      subscription.unsubscribe();\n      inputs$.complete();\n      state$.complete();\n    };\n  }, []); // immutable forever\n\n  return state;\n}","map":{"version":3,"sources":["../../src/use-observable.ts"],"names":[],"mappings":";AAAA,SAAqB,eAArB,QAA4C,MAA5C;AACA,SAAS,QAAT,EAAmB,SAAnB,QAAoC,OAApC;AACA,OAAO,WAAP,MAAwB,cAAxB;AAgBA,OAAM,SAAU,aAAV,CACJ,YADI,EAEJ,YAFI,EAGJ,MAHI,EAG0B;AAExB,MAAA,EAAA,GAAA,MAAA,CAAA,QAAA,CAAA,OAAA,YAAA,KAAA,WAAA,GAAA,YAAA,GAAA,IAAA,CAAA,EAAA,CAAA,CAAA;AAAA,MAAC,KAAA,GAAA,EAAA,CAAA,CAAA,CAAD;AAAA,MAAQ,QAAA,GAAA,EAAA,CAAA,CAAA,CAAR;;AAEN,MAAM,MAAM,GAAG,WAAW,CAAC,YAAA;AAAM,WAAA,IAAI,eAAJ,CAAA,YAAA,CAAA;AAAoD,GAA3D,CAA1B;AACA,MAAM,OAAO,GAAG,WAAW,CAAC,YAAA;AAAM,WAAA,IAAI,eAAJ,CAAA,MAAA,CAAA;AAA8D,GAArE,CAA3B;AAEA,EAAA,SAAS,CAAC,YAAA;AACR,IAAA,OAAO,CAAC,IAAR,CAAa,MAAb;AACD,GAFQ,EAEN,MAAM,IAAI,EAFJ,CAAT;AAIA,EAAA,SAAS,CAAC,YAAA;AACR,QAAI,OAAJ;;AACA,QAAI,MAAJ,EAAY;AACV,MAAA,OAAO,GAAI,YAGY,CAAC,OAAD,EAAU,MAAV,CAHvB;AAID,KALD,MAKO;AACL,MAAA,OAAO,GAAI,YAA6E,CACtF,MADsF,CAAxF;AAGD;;AACD,QAAM,YAAY,GAAG,OAAO,CAAC,SAAR,CAAkB,UAAC,KAAD,EAAM;AAC3C,MAAA,MAAM,CAAC,IAAP,CAAY,KAAZ;AACA,MAAA,QAAQ,CAAC,KAAD,CAAR;AACD,KAHoB,CAArB;AAIA,WAAO,YAAA;AACL,MAAA,YAAY,CAAC,WAAb;AACA,MAAA,OAAO,CAAC,QAAR;AACA,MAAA,MAAM,CAAC,QAAP;AACD,KAJD;AAKD,GArBQ,EAqBN,EArBM,CAAT,CAX8B,CAgCvB;;AAEP,SAAO,KAAP;AACD","sourceRoot":"","sourcesContent":["import { __read } from \"tslib\";\nimport { BehaviorSubject } from 'rxjs';\nimport { useState, useEffect } from 'react';\nimport useConstant from 'use-constant';\nexport function useObservable(inputFactory, initialState, inputs) {\n    var _a = __read(useState(typeof initialState !== 'undefined' ? initialState : null), 2), state = _a[0], setState = _a[1];\n    var state$ = useConstant(function () { return new BehaviorSubject(initialState); });\n    var inputs$ = useConstant(function () { return new BehaviorSubject(inputs); });\n    useEffect(function () {\n        inputs$.next(inputs);\n    }, inputs || []);\n    useEffect(function () {\n        var output$;\n        if (inputs) {\n            output$ = inputFactory(inputs$, state$);\n        }\n        else {\n            output$ = inputFactory(state$);\n        }\n        var subscription = output$.subscribe(function (value) {\n            state$.next(value);\n            setState(value);\n        });\n        return function () {\n            subscription.unsubscribe();\n            inputs$.complete();\n            state$.complete();\n        };\n    }, []); // immutable forever\n    return state;\n}\n//# sourceMappingURL=use-observable.js.map"]},"metadata":{},"sourceType":"module"}