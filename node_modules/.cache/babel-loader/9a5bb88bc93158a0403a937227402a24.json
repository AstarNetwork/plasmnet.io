{"ast":null,"code":"var scrollbarWidth = function (force) {\n  // safety check for SSR\n\n  /* istanbul ignore next */\n  if (!document) {\n    return 0;\n  } // one more safety check. If document has no body element that means script tag been\n  // included before the </body> tag, which in general means that DOM is not ready yet.\n  // Furthermore check the document's ready state in case it is presented [IE9+]\n  // any interactivity [not 'loading'] will be okay for us\n\n  /* istanbul ignore next */\n\n\n  if (!document.body || document.readyState && document.readyState === 'loading') {\n    return undefined;\n  } // return cached value if we have some\n\n\n  if (force !== true && typeof scrollbarWidth.__cache === 'number') {\n    return scrollbarWidth.__cache;\n  }\n\n  var el = document.createElement('div');\n  var style = el.style; // for the case of weird css rules where div will not be a block element.\n\n  style.display = 'block';\n  style.position = 'absolute';\n  style.width = '100px';\n  style.height = '100px';\n  style.left = '-999px';\n  style.top = '-999px';\n  style.overflow = 'scroll';\n  document.body.insertBefore(el, null);\n  var clientWidth = el.clientWidth; // if element still has no width it means DOM is not ready yet\n\n  /* istanbul ignore next */\n\n  if (clientWidth === 0) {\n    // remove the element and skip the caching\n    document.body.removeChild(el);\n    return undefined;\n  } // clientWidth is the total width of the block - scrollbar width, thus, to get the scrollbar width\n  // it works well for desktop, but in mobile browsers scrollbar as absolutely positioned and i\n  // dont know ant way to determine mobile browser's scrollbar width, so for mobile that value will be always 0.\n\n\n  scrollbarWidth.__cache = 100 - clientWidth;\n  document.body.removeChild(el);\n  return scrollbarWidth.__cache;\n};\n\nexport { scrollbarWidth };","map":{"version":3,"sources":["/Users/sate/staketechnologies/plasmnet.io/plasmnet/node_modules/@xobotyi/scrollbar-width/dist/index.esm.js"],"names":["scrollbarWidth","force","document","body","readyState","undefined","__cache","el","createElement","style","display","position","width","height","left","top","overflow","insertBefore","clientWidth","removeChild"],"mappings":"AAAA,IAAIA,cAAc,GAAG,UAAUC,KAAV,EAAiB;AAClC;;AACA;AACA,MAAI,CAACC,QAAL,EAAe;AACX,WAAO,CAAP;AACH,GALiC,CAMlC;AACA;AACA;AACA;;AACA;;;AACA,MAAI,CAACA,QAAQ,CAACC,IAAV,IAAmBD,QAAQ,CAACE,UAAT,IAAuBF,QAAQ,CAACE,UAAT,KAAwB,SAAtE,EAAkF;AAC9E,WAAOC,SAAP;AACH,GAbiC,CAclC;;;AACA,MAAIJ,KAAK,KAAK,IAAV,IAAkB,OAAOD,cAAc,CAACM,OAAtB,KAAkC,QAAxD,EAAkE;AAC9D,WAAON,cAAc,CAACM,OAAtB;AACH;;AACD,MAAIC,EAAE,GAAGL,QAAQ,CAACM,aAAT,CAAuB,KAAvB,CAAT;AACA,MAAIC,KAAK,GAAGF,EAAE,CAACE,KAAf,CAnBkC,CAoBlC;;AACAA,EAAAA,KAAK,CAACC,OAAN,GAAgB,OAAhB;AACAD,EAAAA,KAAK,CAACE,QAAN,GAAiB,UAAjB;AACAF,EAAAA,KAAK,CAACG,KAAN,GAAc,OAAd;AACAH,EAAAA,KAAK,CAACI,MAAN,GAAe,OAAf;AACAJ,EAAAA,KAAK,CAACK,IAAN,GAAa,QAAb;AACAL,EAAAA,KAAK,CAACM,GAAN,GAAY,QAAZ;AACAN,EAAAA,KAAK,CAACO,QAAN,GAAiB,QAAjB;AACAd,EAAAA,QAAQ,CAACC,IAAT,CAAcc,YAAd,CAA2BV,EAA3B,EAA+B,IAA/B;AACA,MAAIW,WAAW,GAAGX,EAAE,CAACW,WAArB,CA7BkC,CA8BlC;;AACA;;AACA,MAAIA,WAAW,KAAK,CAApB,EAAuB;AACnB;AACAhB,IAAAA,QAAQ,CAACC,IAAT,CAAcgB,WAAd,CAA0BZ,EAA1B;AACA,WAAOF,SAAP;AACH,GApCiC,CAqClC;AACA;AACA;;;AACAL,EAAAA,cAAc,CAACM,OAAf,GAAyB,MAAMY,WAA/B;AACAhB,EAAAA,QAAQ,CAACC,IAAT,CAAcgB,WAAd,CAA0BZ,EAA1B;AACA,SAAOP,cAAc,CAACM,OAAtB;AACH,CA3CD;;AA6CA,SAASN,cAAT","sourcesContent":["var scrollbarWidth = function (force) {\r\n    // safety check for SSR\r\n    /* istanbul ignore next */\r\n    if (!document) {\r\n        return 0;\r\n    }\r\n    // one more safety check. If document has no body element that means script tag been\r\n    // included before the </body> tag, which in general means that DOM is not ready yet.\r\n    // Furthermore check the document's ready state in case it is presented [IE9+]\r\n    // any interactivity [not 'loading'] will be okay for us\r\n    /* istanbul ignore next */\r\n    if (!document.body || (document.readyState && document.readyState === 'loading')) {\r\n        return undefined;\r\n    }\r\n    // return cached value if we have some\r\n    if (force !== true && typeof scrollbarWidth.__cache === 'number') {\r\n        return scrollbarWidth.__cache;\r\n    }\r\n    var el = document.createElement('div');\r\n    var style = el.style;\r\n    // for the case of weird css rules where div will not be a block element.\r\n    style.display = 'block';\r\n    style.position = 'absolute';\r\n    style.width = '100px';\r\n    style.height = '100px';\r\n    style.left = '-999px';\r\n    style.top = '-999px';\r\n    style.overflow = 'scroll';\r\n    document.body.insertBefore(el, null);\r\n    var clientWidth = el.clientWidth;\r\n    // if element still has no width it means DOM is not ready yet\r\n    /* istanbul ignore next */\r\n    if (clientWidth === 0) {\r\n        // remove the element and skip the caching\r\n        document.body.removeChild(el);\r\n        return undefined;\r\n    }\r\n    // clientWidth is the total width of the block - scrollbar width, thus, to get the scrollbar width\r\n    // it works well for desktop, but in mobile browsers scrollbar as absolutely positioned and i\r\n    // dont know ant way to determine mobile browser's scrollbar width, so for mobile that value will be always 0.\r\n    scrollbarWidth.__cache = 100 - clientWidth;\r\n    document.body.removeChild(el);\r\n    return scrollbarWidth.__cache;\r\n};\n\nexport { scrollbarWidth };\n"]},"metadata":{},"sourceType":"module"}