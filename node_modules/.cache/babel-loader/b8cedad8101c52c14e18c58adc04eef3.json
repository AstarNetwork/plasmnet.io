{"ast":null,"code":"var _jsxFileName = \"/Users/sate/staketechnologies/plasmnet.io/plasmnet/src/components/HeaderSmall.tsx\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport clsx from \"clsx\";\nimport React from \"react\";\nimport { Icon } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\nimport { Community, Links, Whitepaper } from \"../contents/links\";\nimport plasmLogo from \"../resources/plasm-logo.png\";\nimport { customMedia } from \"../styles/globalStyle\";\nimport { theme } from \"../styles/theme\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n}));\n\nconst HeaderSmall = () => {\n  const classes = useStyles(); // const theme = useTheme();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return React.createElement(HeaderSmallContainer, {\n    style: {\n      zIndex: 100\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: handleDrawerOpen,\n    edge: \"start\",\n    className: clsx(classes.menuButton, open && classes.hide),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"persistent\",\n    anchor: \"left\",\n    open: open,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.drawerHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: plasmLogo,\n    alt: \"plasm-logo\",\n    className: \"plasm-logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Plasm Network\")), React.createElement(IconButton, {\n    onClick: handleDrawerClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(ChevronLeftIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(TitleP, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Whitepaper\"), Whitepaper.map(whitepaper => React.createElement(\"a\", {\n    href: whitepaper.link,\n    rel: \"noopener noreferrer\",\n    target: \"_blank\",\n    key: whitepaper.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    button: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: whitepaper.icon,\n    color: \"grey\",\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(SmallMenuP, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, whitepaper.description))))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(TitleP, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Community\"), Community.map(community => React.createElement(\"a\", {\n    href: community.link,\n    rel: \"noopener noreferrer\",\n    target: \"_blank\",\n    key: community.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    button: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: community.icon,\n    color: \"grey\",\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), React.createElement(SmallMenuP, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, community.description))))), React.createElement(Divider, {\n    style: {\n      marginBottom: \"10px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: Links.docs,\n    rel: \"noopener noreferrer\",\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    button: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"book\",\n    color: \"grey\",\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }), React.createElement(SmallMenuP, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Docs\")))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: Links.twitter,\n    rel: \"noopener noreferrer\",\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    button: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"twitter\",\n    color: \"grey\",\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), React.createElement(SmallMenuP, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Twitter\")))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: Links.github,\n    rel: \"noopener noreferrer\",\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    button: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"github\",\n    color: \"grey\",\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }), React.createElement(SmallMenuP, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"GitHub\")))))));\n};\n\nexport default HeaderSmall;\nconst HeaderSmallContainer = styled.div`\n  ${customMedia.greaterThan(\"tabletPro\")`\n    display: none;\n  `}\n\n  position: fixed;\n  .MuiToolbar-gutters {\n    background: ${theme.colors.creamWhite};\n  }\n\n  .MuiIconButton-label {\n    color: ${theme.colors.lightGrey} !important;\n    margin-left: 20px;\n  }\n  .MuiSvgIcon-root {\n    width: 30px;\n    height: 30px;\n  }\n\n  .logo {\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    color: black;\n    opacity: 0.9;\n    .plasm-logo {\n      height: 38px;\n      margin-right: 10px;\n    }\n    h4 {\n      font-size: 18px;\n      margin-top: 0px;\n    }\n  }\n`;\nconst SmallMenuP = styled.p`\n  font-size: 16px;\n  margin-left: 18px;\n  margin-bottom: 0px;\n  color: ${theme.colors.black};\n`;\nconst TitleP = styled.p`\n  font-size: 18px;\n  margin-bottom: 6px !important;\n  margin-bottom: 0px;\n  color: ${theme.colors.black};\n  text-align: center;\n`;","map":{"version":3,"sources":["/Users/sate/staketechnologies/plasmnet.io/plasmnet/src/components/HeaderSmall.tsx"],"names":["Divider","Drawer","IconButton","List","ListItem","createStyles","makeStyles","ChevronLeftIcon","MenuIcon","clsx","React","Icon","styled","Community","Links","Whitepaper","plasmLogo","customMedia","theme","drawerWidth","useStyles","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","HeaderSmall","classes","open","setOpen","useState","handleDrawerOpen","handleDrawerClose","zIndex","paper","map","whitepaper","link","description","icon","community","marginBottom","docs","twitter","github","HeaderSmallContainer","div","greaterThan","colors","creamWhite","lightGrey","SmallMenuP","p","black","TitleP"],"mappings":"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","sourcesContent":["import Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport clsx from \"clsx\";\nimport React from \"react\";\nimport { Icon } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\nimport { Community, Links, Whitepaper } from \"../contents/links\";\nimport plasmLogo from \"../resources/plasm-logo.png\";\nimport { customMedia } from \"../styles/globalStyle\";\nimport { theme } from \"../styles/theme\";\n\ninterface Props {}\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\"\n    },\n    appBar: {\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    hide: {\n      display: \"none\"\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    drawerHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(0, 1),\n      ...theme.mixins.toolbar,\n      justifyContent: \"flex-end\"\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      marginLeft: -drawerWidth\n    },\n    contentShift: {\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      }),\n      marginLeft: 0\n    }\n  })\n);\n\nconst HeaderSmall: React.FC<Props> = () => {\n  const classes = useStyles();\n  // const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <HeaderSmallContainer style={{ zIndex: 100 }}>\n      <div className={classes.root}>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          edge=\"start\"\n          className={clsx(classes.menuButton, open && classes.hide)}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <div className=\"logo\">\n              <img src={plasmLogo} alt=\"plasm-logo\" className=\"plasm-logo\" />\n              <h4>Plasm Network</h4>\n            </div>\n            <IconButton onClick={handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            <TitleP>Whitepaper</TitleP>\n            {Whitepaper.map(whitepaper => (\n              <a\n                href={whitepaper.link}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n                key={whitepaper.description}\n              >\n                <ListItem button>\n                  {/*\n                  // @ts-ignore */}\n                  <Icon name={whitepaper.icon} color=\"grey\" size=\"large\" />\n                  <SmallMenuP>{whitepaper.description}</SmallMenuP>\n                </ListItem>\n              </a>\n            ))}\n          </List>\n          <Divider />\n          <List>\n            <TitleP>Community</TitleP>\n            {Community.map(community => (\n              <a\n                href={community.link}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n                key={community.description}\n              >\n                <ListItem button>\n                  {/*\n                  // @ts-ignore */}\n                  <Icon name={community.icon} color=\"grey\" size=\"large\" />\n                  <SmallMenuP>{community.description}</SmallMenuP>\n                </ListItem>\n              </a>\n            ))}\n          </List>\n          <Divider style={{ marginBottom: \"10px\" }} />\n          <div>\n            <a href={Links.docs} rel=\"noopener noreferrer\" target=\"_blank\">\n              <ListItem button>\n                <Icon name=\"book\" color=\"grey\" size=\"large\" />\n                <SmallMenuP>Docs</SmallMenuP>\n              </ListItem>\n            </a>\n          </div>\n\n          <div>\n            <a href={Links.twitter} rel=\"noopener noreferrer\" target=\"_blank\">\n              <ListItem button>\n                <Icon name=\"twitter\" color=\"grey\" size=\"large\" />\n                <SmallMenuP>Twitter</SmallMenuP>\n              </ListItem>\n            </a>\n          </div>\n\n          <div>\n            <a href={Links.github} rel=\"noopener noreferrer\" target=\"_blank\">\n              <ListItem button>\n                <Icon name=\"github\" color=\"grey\" size=\"large\" />\n                <SmallMenuP>GitHub</SmallMenuP>\n              </ListItem>\n            </a>\n          </div>\n        </Drawer>\n      </div>\n    </HeaderSmallContainer>\n  );\n};\n\nexport default HeaderSmall;\n\nconst HeaderSmallContainer = styled.div`\n  ${customMedia.greaterThan(\"tabletPro\")`\n    display: none;\n  `}\n\n  position: fixed;\n  .MuiToolbar-gutters {\n    background: ${theme.colors.creamWhite};\n  }\n\n  .MuiIconButton-label {\n    color: ${theme.colors.lightGrey} !important;\n    margin-left: 20px;\n  }\n  .MuiSvgIcon-root {\n    width: 30px;\n    height: 30px;\n  }\n\n  .logo {\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    color: black;\n    opacity: 0.9;\n    .plasm-logo {\n      height: 38px;\n      margin-right: 10px;\n    }\n    h4 {\n      font-size: 18px;\n      margin-top: 0px;\n    }\n  }\n`;\nconst SmallMenuP = styled.p`\n  font-size: 16px;\n  margin-left: 18px;\n  margin-bottom: 0px;\n  color: ${theme.colors.black};\n`;\nconst TitleP = styled.p`\n  font-size: 18px;\n  margin-bottom: 6px !important;\n  margin-bottom: 0px;\n  color: ${theme.colors.black};\n  text-align: center;\n`;\n"]},"metadata":{},"sourceType":"module"}